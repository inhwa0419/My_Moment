from flask import Flask, render_template, jsonify, request
import requests
from bs4 import BeautifulSoup
import urllib.request
from urllib.parse import quote
import json
import cgi

from pymongo import MongoClient
client = MongoClient('localhost', 27017)
db = client.moment

app = Flask(__name__)
# html을 주는 부분

naver_client_id = "bF6LcFNAOzjhuemna10b"
naver_client_secret = "EprEWwEjKA"

@app.route('/')
def home():
    return render_template('main.html')

@app.route('/list', methods=['GET'])
def listing():
    all_moment = list(db.moments.find({},{'_id':0}))
    for user in all_moment:
        print(user)
    return jsonify({'result':'success', 'info':all_moment})

@app.route('/search', methods=['GET'])
def search():
    
    url = "https://openapi.naver.com/v1/search/movie.json"
    option = "&display=10&sort=count"
    title_receive = request.args.get('title_give')
    query = "?query=" + urllib.parse.quote(title_receive)
    url_query = url + query + option

    nrequest = urllib.request.Request(url_query)
    nrequest.add_header("X-Naver-Client-Id", naver_client_id)
    nrequest.add_header("X-Naver-Client-Secret", naver_client_secret)

    response = urllib.request.urlopen(nrequest)
    rescode = response.getcode()
    if (rescode == 200):
        response_body = response.read()
        d = json.loads(response_body.decode('utf-8'))

        if(len(d['items'])>0):
            movies = d['items']
            for i in movies:
                print(i['title'])
                print(i['image'])
        else:
            print("일치하는영화없음")

        # print(response_body.decode('utf-8'))
    else:
         print("Error code:" + rescode)

    return jsonify({'result': 'success', 'movies': movies})

@app.route('/new', methods=['POST'])
def new_post():
    date_receive = request.form['date_give']
    title_receive = request.form['title_give']
    star_receive = request.form['star_give']
    description_receive = request.form['description_give']
    image_receive = request.form['image_give']

    db.moments.insert_one({'date': date_receive, 'title':title_receive, 'star': star_receive, 'description':description_receive,
                           'image': image_receive})

    return jsonify({'result': 'success'})

@app.route('/delete', methods=['POST'])
def delete_post():
    title_receive = request.form['title_give']
    db.moments.delete_one({'title': title_receive})

    return jsonify({'result': 'success'})


if __name__ == '__main__':
    app.run('0.0.0.0',port=5000,debug=True)